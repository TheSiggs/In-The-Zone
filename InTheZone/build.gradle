// Apply the java plugin to add support for Java

plugins {
  id 'com.github.johnrengelman.shadow' version '1.2.3'
  id 'java'
  id 'application'
}
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.21'
    compile fileTree(dir: 'lib', include: '*.jar')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile 'junit:junit:4.12'
}


def mainClass = 'inthezone.game.Game'
mainClassName = mainClass
def serverClass = 'inthezone.server.Server'
def baseName = 'inthezone'
def version = '0.1.0'

/*
task serverJar(type: Jar) {
    enabled = true
    baseName = "server-${baseName}"
    version = version
    manifest {
        def manifestCp = configurations.runtime.files.collect  {
            File file = it
            "${file.name}"
        }.join(' ')
        attributes 'Class-Path': manifestCp
        attributes 'Main-Class': serverClass
    }
}

run {
	classpath = project.sourceSets.test.runtimeClasspath
}
*/

// The following doesn't work yet:
task serverJar(type: ShadowJar) {
	archiveName = 'foo.jar'
    version = version
	/*
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
        	'Implementation-Version': version,
        	'Main-Class': mainClassName
    }
	*/
    //baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    //with jar
}
