//apply from: '../common.gradle' // doesn't work!
import org.apache.tools.ant.taskdefs.condition.Os
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
	id 'com.github.johnrengelman.shadow' version '1.2.3'
		id 'java'
		id 'application'
}
repositories {
	jcenter()
}

dependencies {
	compile fileTree(dir: '../lib', include: '*.jar')
	testCompile fileTree(dir: '../lib', include: '*.jar')
	testCompile 'junit:junit:4.12'
}

sourceSets {
	main {
		java {
			srcDir '../src/main/java'
				include '**'
		}
		resources {
			srcDir '../src/main/resources'
				include '**'
		}
	}
	test {
		java {
			srcDir '../src/test/java'
				include '**'
		}
	}
}
def mainClass = 'inthezone.game.Game'
def serverClass = 'inthezone.server.Server'
mainClassName = serverClass
def baseName = 'InTheZone'
def vVersion = 'git describe --abbrev=0'.execute().text
version = vVersion.substring(1, vVersion.length() - 1)
def postFix="-server"
def packageName="$baseName$postFix"
def shadowJarName = "${project.name}-$version-all.jar"

task packageNative(type: Exec, dependsOn:shadowJar) {
	def mainArgs = [project.version, shadowJar.archivePath, mainClassName, baseName, postFix]
	if (Os.isFamily(Os.FAMILY_MAC))
		executable "${project.rootDir}/package/mac.sh"
	else if (Os.isFamily(Os.FAMILY_UNIX))
		executable "${project.rootDir}/package/linux.sh"
	else if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		environment PATH: "d:/Program Files (x86)/Inno Setup 5"
		executable 'javapackager'
		mainArgs = ['-deploy', 
		    "-BappVersion=$version", 
		    "-Bcategory=Games", 
		    "-BlicenseType=GPLv3", 
		    "-Bemail=info@inthezone.io", 
		    "-native", "exe", 
		    "-name", "$packageName", 
		    "-title", "$packageName", 
		    "-vendor", "$packageName", 
		    "-outdir", "build", 
		    "-srcfiles", "${project.rootDir}/server/build/libs/$shadowJarName", 
		    "-appclass", "$mainClassName", 
		    "-outfile", "$packageName"]
	} else
		throw new GradleException("Unsupported OS: " + System.properties['os.name'])

			args mainArgs
}
distributions {
	main {
		baseName = 'game'
			contents {
				from { 'src/main/resources' }
				from { 'start_scripts' }
			}
	}
}
shadowJar.dependsOn test
